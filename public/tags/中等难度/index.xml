<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>中等难度 on Tulips</title>
    <link>https://www.tlst.cc/tags/%E4%B8%AD%E7%AD%89%E9%9A%BE%E5%BA%A6/</link>
    <description>Recent content in 中等难度 on Tulips</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Copyright @ 2022 郁金香啊</copyright>
    <lastBuildDate>Thu, 21 Apr 2022 12:01:33 +0800</lastBuildDate><atom:link href="https://www.tlst.cc/tags/%E4%B8%AD%E7%AD%89%E9%9A%BE%E5%BA%A6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Longest Palindromic Substring</title>
      <link>https://www.tlst.cc/post/leetcode-5-longest-palindromic-substring/</link>
      <pubDate>Thu, 21 Apr 2022 12:01:33 +0800</pubDate>
      
      <guid>https://www.tlst.cc/post/leetcode-5-longest-palindromic-substring/</guid>
      <description>给定一个字符串，返回其最长回文字串。
The Longest Palindromic Substring 示例 示例 1:
输入: s = &amp;#34;babad&amp;#34; 输出: &amp;#34;bab&amp;#34; 解释: &amp;#34;aba&amp;#34;也是一个正确的答案 示例 2:
输入: s = &amp;#34;cbbd&amp;#34; 输出: &amp;#34;bb&amp;#34; 限制条件:
 1 &amp;lt;= s.length &amp;lt;= 1000 字符串中仅仅包含数组和字母  解决方案 对于这道题目，leetcode自己给出了五个解决方案，这里我们选择其中两个解决方案来进行分析。
解决方案 1 - 动态规划 我们前面刚好写了一篇关于动态规划的文章，感兴趣的同学可以先看看这篇文章 - 动态规划的系统性方法。接下来我们就按照这篇文章里面的阐述的方法来对这个问题进行分析。
让我们回顾下动态规划的系统性方法
* 首先，问你自己一个问题，我真的需要使用动态规划解决这个问题吗或者说我真的可以用动态规划解决这个问题吗  * 定义我们的状态 * 定义我们的递归关系，或者说是状态迁移方程 * 列出所有状态转换及其各自状态迁移的条件 * 定义我们的基本情况 * 实现一个朴素的递归解决方案 * 使用自顶向下的方法（Memoization）对我们递归的解决方案进行优化 * 使用自底向上的方法（Tabulation）消除递归的开销 可以用动态规划解决这个问题吗 这个问题同样是让我们基于一个特定的条件求解一个最大的结果，条件是回文序列，结果是最大字串长度。我们可以看出这是一个最优解问题，那么它是否包含一个优化结构呢？</description>
    </item>
    
    <item>
      <title>Longest Substring Without Repeating Characters</title>
      <link>https://www.tlst.cc/post/leetcode-3-longest-substring-without-repeating-characters/</link>
      <pubDate>Wed, 20 Apr 2022 09:13:33 +0800</pubDate>
      
      <guid>https://www.tlst.cc/post/leetcode-3-longest-substring-without-repeating-characters/</guid>
      <description>给定一个字符串，找到它里面不包含重复字符的最长的字串。
Longest Substring Without Repeating Characters 示例 示例 1:
输入: s = &amp;#34;abcabcbb&amp;#34; 输出: 3 解释: 满足条件的最长字串是&amp;#34;abc&amp;#34;，字符串长度是3 示例 2:
输入: s = &amp;#34;bbbbb&amp;#34; 输出: 1 解释: 满足条件的最长字串是&amp;#34;b&amp;#34;，长度是1 示例 3:
输入: s = &amp;#34;pwwkew&amp;#34; 输出: 3 解释: 满足条件的最长字串是&amp;#34;wke&amp;#34;，长度是3 Constraints:
 0 &amp;lt;= s.length &amp;lt;= 5 * 10000 字符串可能包含英文字母，数字，特殊符号以及空格  解决方案 解决方案 1 - BitSet class Solution {  public int lengthOfLongestSubstring(String s) {  java.</description>
    </item>
    
    <item>
      <title>Add Two Number</title>
      <link>https://www.tlst.cc/post/leetcode-2-add-two-number/</link>
      <pubDate>Tue, 19 Apr 2022 17:44:33 +0800</pubDate>
      
      <guid>https://www.tlst.cc/post/leetcode-2-add-two-number/</guid>
      <description>给定两个非空的链表，分别代表两个非负整数，链表的每一个节点代表整数的一位数字，数字是按照倒序存储的。请对这两个数字进行求和，并将结果按照同样的格式进行返回。
此处我们假定，这两个数字不包含任何前置0，当然了除了数字0本身。
Add Two Number 示例 示例 1:
输入: l1 = [2,4,3], l2 = [5,6,4] 输出: [7,0,8] 解释: 342 + 465 = 807. 示例 2:
输入: l1 = [0], l2 = [0] 输出: [0] 示例 3:
输入: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9] 输出: [8,9,9,9,0,0,0,1] Constraints:
 每一个数字的位数也即每个链表的长度限制在范围[1, 100]. 0 &amp;lt;= Node.</description>
    </item>
    
  </channel>
</rss>
