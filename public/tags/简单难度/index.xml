<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>简单难度 on Tulips</title>
    <link>https://www.tlst.cc/tags/%E7%AE%80%E5%8D%95%E9%9A%BE%E5%BA%A6/</link>
    <description>Recent content in 简单难度 on Tulips</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Copyright @ 2022 郁金香啊</copyright>
    <lastBuildDate>Wed, 04 May 2022 13:10:33 +0800</lastBuildDate><atom:link href="https://www.tlst.cc/tags/%E7%AE%80%E5%8D%95%E9%9A%BE%E5%BA%A6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Longest Common Prefix</title>
      <link>https://www.tlst.cc/post/leetcode-14-longest-common-prefix/</link>
      <pubDate>Wed, 04 May 2022 13:10:33 +0800</pubDate>
      
      <guid>https://www.tlst.cc/post/leetcode-14-longest-common-prefix/</guid>
      <description>这道题是简单难度的题目，本来我准备跳过这道题目的，但是看了另一篇博客，里面给出了很多种可选的解决方案，每一种解决方案体现的思路还是很不错的。
实现一个函数来计算一组字符串中的公共最长前缀字串。如果没有找到最长公共字串，那么直接返回空串。
示例 示例 1:
输入: strs = [&amp;#34;flower&amp;#34;,&amp;#34;flow&amp;#34;,&amp;#34;flight&amp;#34;] 输出: &amp;#34;fl&amp;#34; 示例 2:
输入: strs = [&amp;#34;dog&amp;#34;,&amp;#34;racecar&amp;#34;,&amp;#34;car&amp;#34;] 输出: &amp;#34;&amp;#34; 解释: There is no common prefix among the input strings. 限制:
 1 &amp;lt;= strs.length &amp;lt;= 200 0 &amp;lt;= strs[i].length &amp;lt;= 200 strs[i]中仅仅包含英文字母  解决方案 解决方案 1 - 纵向比较 我们将这一组字符串的字符序列一行行排列起来，然后一列一列进行比较，如果某一列字符不匹配，或者某一行字符串用完了，那么这一列之前的字串就是我们要找到最长字串。
class Solution {  public String longestCommonPrefix(String[] strs) {  if(strs == null || strs.</description>
    </item>
    
    <item>
      <title>Two Sum</title>
      <link>https://www.tlst.cc/post/leetcode-1-two-sum/</link>
      <pubDate>Tue, 19 Apr 2022 12:44:33 +0800</pubDate>
      
      <guid>https://www.tlst.cc/post/leetcode-1-two-sum/</guid>
      <description>Two Sum 概述 给定一个整数数组和一个目标值，在数组中找到两个数字，满足这两个数字之和等于目标值，返回这两个数字的索引。
此处我们假定这个数组中只有一个组合满足上述条件，此外，你不能使用同一个数字两次。
你可以以任意顺序返回组合的索引。
示例 1:
输入: nums = [2,7,11,15], target = 9 输出: [0,1] 解释: Because nums[0] + nums[1] == 9, we return [0, 1]. 示例 2:
输入: nums = [3,2,4], target = 6 输出: [1,2] 示例 3:
输入: nums = [3,3], target = 6 输出: [0,1] 限制条件:</description>
    </item>
    
  </channel>
</rss>
